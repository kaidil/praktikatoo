package com.example.demo.restservice.RestApp;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/records")
public class MainController {
    @Autowired// This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private RecordRepository RecordRepository;
    // Rest meetod uue kirje lisamiseks     HTTP-ga yhenduse saamiseks
    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewRecord(@RequestParam String type, @RequestParam String slotContent, @RequestParam String slotDesc,
                        @RequestParam String slotSentence) {

        Record n = new Record();
        n.setType(type);
        n.setSlotContent(slotContent);
        n.setSlotDesc(slotDesc);
        n.setSlotSentence(slotSentence);
        RecordRepository.save(n);
        return "com.example.demo.restservice.RestApp.RestApp.Record Saved";
    }
    // REST meetod muutmiseks
    @PostMapping("/test")
    public @ResponseBody
    String test(@RequestParam String test){
        return test;
    }
    @PostMapping("/change")
    public @ResponseBody
    String changeRecord(@RequestParam Long id, @RequestParam String type, @RequestParam String slotContent, @RequestParam String slotDesc,
                        @RequestParam String slotSentence) {

        Record n = new Record();
        n = RecordRepository.findById(id).get();
        if(type.equals("0")) {
            n.setSlotContent(slotContent);
            n.setSlotDesc(slotDesc);
            n.setSlotSentence(slotSentence);
        }
        else if(slotContent.equals("0")) {
            n.setType(type);
            n.setSlotDesc(slotDesc);
            n.setSlotSentence(slotSentence);
        }
        else if(slotDesc.equals("0")) {
            n.setType(type);
            n.setSlotContent(slotContent);
            n.setSlotSentence(slotSentence);
        }
        else if(slotSentence.equals("0")) {
            n.setType(type);
            n.setSlotContent(slotContent);
            n.setSlotDesc(slotDesc);
        }
        else {
            n.setType(type);
            n.setSlotContent(slotContent);
            n.setSlotDesc(slotDesc);
            n.setSlotSentence(slotSentence);
        }
        RecordRepository.save(n);
        return("Muudetud!");

    }

    // Rest meetod k√µigi kirjete vaatamiseks
    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Record> getAllRecords() {
        // This returns a JSON or XML with the users
        return RecordRepository.findAll();
    }

    @PostMapping(path = "/delete")
    public @ResponseBody
    String deleteUser(@RequestParam Long id) {
        // This returns a JSON or XML with the users
        Record n = new Record();
        n.setId(id);
        RecordRepository.delete(n);
        return "com.example.demo.restservice.RestApp.RestApp.Record deleted";
    }
}
